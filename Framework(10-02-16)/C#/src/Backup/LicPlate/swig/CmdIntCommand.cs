/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class CmdIntCommand : CmdInterpreter.Command {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal CmdIntCommand(global::System.IntPtr cPtr, bool cMemoryOwn) : base(VisionLabPINVOKE.CmdIntCommand_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CmdIntCommand obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~CmdIntCommand() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          VisionLabPINVOKE.delete_CmdIntCommand(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public CmdIntCommand(SWIGTYPE_p_f_r_std__istream_r_std__ostream_r_JL_VisionLib_V3__VisLibCmdInt__void proc, VisLibCmdInt cInt) : this(VisionLabPINVOKE.new_CmdIntCommand(SWIGTYPE_p_f_r_std__istream_r_std__ostream_r_JL_VisionLib_V3__VisLibCmdInt__void.getCPtr(proc), VisLibCmdInt.getCPtr(cInt)), true) {
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void Execute(SWIGTYPE_p_std__istream arg0, SWIGTYPE_p_std__ostream os) {
    VisionLabPINVOKE.CmdIntCommand_Execute(swigCPtr, SWIGTYPE_p_std__istream.getCPtr(arg0), SWIGTYPE_p_std__ostream.getCPtr(os));
    if (VisionLabPINVOKE.SWIGPendingException.Pending) throw VisionLabPINVOKE.SWIGPendingException.Retrieve();
  }

}
